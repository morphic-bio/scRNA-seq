{"name": "feature_finder", "description": "Assigns feature barcodes to cells", "docker_image_name": "biodepot/process_features", "docker_image_tag": "latest", "priority": "13", "icon": null, "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputdir", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["trigger", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["features_file", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["whitelist", {"callback": null, "type": {"py/type": "builtins.str"}}]}]}]}, "outputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputdir", {"default": null, "type": {"py/type": "builtins.str"}}]}]}]}, "volumes": null, "ports": null, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["imputfiles", {"flag": null, "argument": true, "label": "Feature barcode fastq files", "type": "file list"}]}, {"py/tuple": ["inputdirs", {"flag": null, "argument": true, "label": "Feature barcode fastq directories", "type": "directory list"}]}, {"py/tuple": ["keep_existing", {"flag": "-k ", "label": "Keep existing results", "type": "bool"}]}, {"py/tuple": ["whitelist", {"flag": "-w ", "label": "Cell barcode whitelist", "type": "file"}]}, {"py/tuple": ["barcode_length", {"default": 16, "flag": "-b ", "label": "Cell barcode length", "type": "int"}]}, {"py/tuple": ["features_file", {"flag": "-f ", "label": "Features sequences file", "type": "file"}]}, {"py/tuple": ["maxHammingDistance", {"default": 5, "flag": "-m ", "label": "Max Hamming distance", "type": "int"}]}, {"py/tuple": ["stringency", {"default": 1, "flag": "-s ", "label": "UMI deduping stringency", "type": "int"}]}, {"py/tuple": ["min_counts", {"default": 0, "flag": "-i ", "label": "Minimum feature-umi counts for deduping", "type": "int"}]}, {"py/tuple": ["outputdir", {"default": "", "flag": "-d ", "label": "Output directory", "type": "directory"}]}, {"py/tuple": ["feature_constant_offset", {"default": 26, "flag": "-o ", "label": "Number of constant basepairs in feature sequences", "type": "int"}]}, {"py/tuple": ["nprocesses", {"flag": "-t ", "label": "Maximum number of processes to fork off", "type": "int"}]}, {"py/tuple": ["searchThreads", {"default": 4, "flag": "-S ", "label": "Number of threads to use for hamming search (1:2:4)", "type": "int"}]}, {"py/tuple": ["consumerThreads", {"flag": "-c ", "label": "Number of threads to process each sample", "type": "int"}]}, {"py/tuple": ["umi_length", {"default": 12, "flag": "-u ", "label": "Length of feature UMI", "type": "int"}]}, {"py/tuple": ["debugmode", {"flag": "-v ", "label": "Verbose messages", "type": "bool"}]}, {"py/tuple": ["process_in_order", {"flag": "-a ", "label": "Do not try to organize by sample name", "type": "bool"}]}, {"py/tuple": ["maximum_mismatch", {"default": 3, "flag": "--max_barcode_mismatches ", "label": "Maximum ambiguous barcodes matched before ignoring", "type": "int"}]}, {"py/tuple": ["barcode_n", {"default": 1, "flag": null, "label": "Maximum number of N's in cellular barcode", "type": "int"}]}, {"py/tuple": ["feature_n", {"default": 3, "flag": null, "label": "Maximum number of N's in feature barcode", "type": "int"}]}, {"py/tuple": ["barcode_constant_offset", {"flag": "-B ", "label": "Offset for barcode sequences", "type": "int"}]}, {"py/tuple": ["readBufferLines", {"default": 2048, "flag": "-R  ", "label": "Number of lines in fastq read buffer", "type": "int"}]}, {"py/tuple": ["as_named", {"flag": "-a ", "label": "Do not group fastq files by sample name", "type": "bool"}]}, {"py/tuple": ["reverse_complement", {"flag": "-r ", "label": "Reverse complement sequence barcode", "type": "bool"}]}, {"py/tuple": ["barcodePattern", {"default": "_R1_", "flag": "--barcode_fastq_pattern ", "label": "Barcode fastq pattern", "type": "str"}]}, {"py/tuple": ["forwardPattern", {"default": "_R2_", "flag": "--forward_fastq_pattern ", "label": "Forward fastq pattern", "type": "str"}]}, {"py/tuple": ["reversePattern", {"default": "_R3_", "flag": "--reverse_fastq_pattern ", "label": "Reverse fastq pattern", "type": "str"}]}, {"py/tuple": ["averageReadLength", {"flag": "-L ", "label": "Average read length", "type": "int"}]}, {"py/tuple": ["minPosterior", {"default": 0.975, "flag": "-M ", "label": "Minimum probability for ambiguous barcode", "type": "double"}]}, {"py/tuple": ["skip", {"flag": null, "label": "Skip execution", "type": "bool", "env": "skip"}]}, {"py/tuple": ["maxreads", {"flag": "--max_reads ", "label": "Limit number of reads", "type": "int"}]}, {"py/tuple": ["limitsearch", {"flag": "--limit_search", "label": "Limit search to nbp near constant sequence", "type": "int"}]}, {"py/tuple": ["gposterior", {"default": 0.9, "flag": "--gposterior ", "label": "Posterior for EM", "type": "double"}]}, {"py/tuple": ["minEMcounts", {"flag": "--min_EM_counts ", "label": "Minimum counts for EM fit", "type": "int"}]}, {"py/tuple": ["filterbarcodes", {"flag": "--filtered_barcodes ", "label": "Relative path for valid barcodes", "type": "str", "env": "filter_barcodes"}]}]}]}, "command": ["assignBarcodes "], "autoMap": true, "runDockerMap": null, "nextFlowMap": null, "persistentSettings": "all", "requiredParameters": ["keep_existing", "whitelist", "barcode_length", "features_file", "maxHammingDistance", "outputdir", "umi_length", "skip"]}